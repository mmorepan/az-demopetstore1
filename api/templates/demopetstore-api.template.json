{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ApimServiceName": {
      "type": "string"
    },
    "PolicyXMLBaseUrl": {
      "type": "string"
    },
    "BackendServiceUrl": {
      "type": "string"
    },
    "ApiLoggerId": {
      "type": "object"
    },
    "OauthServerId": {
      "type": "string"
    },
    "ProductsApiName": {
      "type": "object"
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[concat(parameters('ApimServiceName'), '/demopetstore')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [],
      "properties": {
        "displayName": "DemoPetstore",
        "apiRevision": "1",
        "subscriptionRequired": true,
        "serviceUrl": "[parameters('BackendServiceUrl')]",
        "path": "arm/demopetstore",
        "protocols": [
          "https"
        ],
        "authenticationSettings": {
          "oAuth2": {
            "authorizationServerId": "[parameters('OauthServerId')]"
          }
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "isCurrent": true
      },
      "resources": []
    },
    {
      "name": "[concat(parameters('ApimServiceName'), '/demopetstore/5f1c714da6ad26110cdf4e94')]",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demopetstore')]"
      ],
      "properties": {
        "contentType": "application/vnd.oai.openapi.components+json",
        "document": {
          "components": {
            "schemas": {
              "Pet": {
                "required": [
                  "id",
                  "name"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string"
                  },
                  "tag": {
                    "type": "string"
                  }
                }
              },
              "Pets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "Error": {
                "required": [
                  "code",
                  "message"
                ],
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "[concat(parameters('ApimServiceName'), '/demopetstore/createPets')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demopetstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'demopetstore', '5f1c714da6ad26110cdf4e94')]"
      ],
      "properties": {
        "displayName": "Create a pet",
        "method": "POST",
        "urlTemplate": "/pets",
        "templateParameters": [],
        "description": "Create a pet",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "Null response",
            "representations": [],
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "unexpected error",
            "representations": [
              {
                "contentType": "application/json",
                "sample": "",
                "schemaId": "5f1c714da6ad26110cdf4e94",
                "typeName": "Error"
              }
            ],
            "headers": []
          },
          {
            "statusCode": 500,
            "description": "unexpected error",
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "5f1c714da6ad26110cdf4e94",
                "typeName": "Error"
              }
            ],
            "headers": []
          },
          {
            "statusCode": 503,
            "description": "Service Unavailable error",
            "representations": [
              {
                "contentType": "application/json",
                "sample": "",
                "schemaId": "5f1c714da6ad26110cdf4e94",
                "typeName": "Error"
              }
            ],
            "headers": []
          }
        ]
      },
      "resources": []
    },
    {
      "name": "[concat(parameters('ApimServiceName'), '/demopetstore/createPets/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'demopetstore', 'createPets')]"
      ],
      "properties": {
        "format": "rawxml-link",
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/demopetstore-createPets-operationPolicy.xml')]"
      }
    },
    {
      "name": "[concat(parameters('ApimServiceName'), '/demopetstore/showPetById')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demopetstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'demopetstore', '5f1c714da6ad26110cdf4e94')]"
      ],
      "properties": {
        "displayName": "Info for a specific pet",
        "method": "GET",
        "urlTemplate": "/pets/{petId}",
        "templateParameters": [
          {
            "name": "petId",
            "description": "The id of the pet to retrieve",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Info for a specific pet",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Expected response to a valid request",
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "5f1c714da6ad26110cdf4e94",
                "typeName": "Pet"
              }
            ],
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "unexpected error",
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "5f1c714da6ad26110cdf4e94",
                "typeName": "Error"
              }
            ],
            "headers": []
          },
          {
            "statusCode": 500,
            "description": "unexpected error",
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "5f1c714da6ad26110cdf4e94",
                "typeName": "Error"
              }
            ],
            "headers": []
          }
        ]
      },
      "resources": []
    },
    {
      "name": "[concat(parameters('ApimServiceName'), '/demopetstore/showPetById/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'demopetstore', 'showPetById')]"
      ],
      "properties": {
        "format": "rawxml-link",
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/demopetstore-showPetById-operationPolicy.xml')]"
      }
    },
    {
      "name": "[concat(parameters('ApimServiceName'), '/demopetstore/listPets')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demopetstore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'demopetstore', '5f1c714da6ad26110cdf4e94')]"
      ],
      "properties": {
        "displayName": "List all pets",
        "method": "GET",
        "urlTemplate": "/pets",
        "templateParameters": [],
        "description": "List all pets",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "Format - int32. How many items to return at one time (max 100)",
              "type": "integer",
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A paged array of pets",
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "5f1c714da6ad26110cdf4e94",
                "typeName": "Pets"
              }
            ],
            "headers": [
              {
                "name": "x-next",
                "description": "A link to the next page of responses",
                "type": "string",
                "values": []
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "unexpected error",
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "5f1c714da6ad26110cdf4e94",
                "typeName": "Error"
              }
            ],
            "headers": []
          },
          {
            "statusCode": 500,
            "description": "unexpected error",
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "5f1c714da6ad26110cdf4e94",
                "typeName": "Error"
              }
            ],
            "headers": []
          }
        ]
      },
      "resources": []
    },
    {
      "name": "[concat(parameters('ApimServiceName'), '/demopetstore/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demopetstore')]"
      ],
      "properties": {
        "format": "rawxml-link",
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/demopetstore-apiPolicy.xml')]"
      }
    },
    {
      "name": "[concat(parameters('ApimServiceName'), '/', parameters('ProductsApiName').demopetstoreproduct, '/', 'demopetstore')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demopetstore')]"
      ],
      "properties": {}
    },
    {
      "name": "[concat(parameters('ApimServiceName'), '/demopetstore/applicationinsights')]",
      "type": "Microsoft.ApiManagement/service/apis/diagnostics",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demopetstore')]"
      ],
      "properties": {
        "alwaysLog": "allErrors",
        "httpCorrelationProtocol": "Legacy",
        "verbosity": "information",
        "logClientIp": true,
        "loggerId": "[parameters('ApiLoggerId').apilog.applicationinsights]",
        "sampling": {
          "samplingType": "fixed",
          "percentage": 100
        },
        "frontend": {
          "request": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          },
          "response": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          }
        },
        "backend": {
          "request": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          },
          "response": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          }
        }
      },
      "condition": "[equals(parameters('ApimServiceName'), 'APIMNGR-genesis-prod')]"
    },
    {
      "name": "[concat(parameters('ApimServiceName'), '/demopetstore/azuremonitor')]",
      "type": "Microsoft.ApiManagement/service/apis/diagnostics",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demopetstore')]"
      ],
      "properties": {
        "alwaysLog": "allErrors",
        "verbosity": "information",
        "logClientIp": true,
        "loggerId": "[parameters('ApiLoggerId').apilog.azuremonitor]",
        "sampling": {
          "samplingType": "fixed",
          "percentage": 100
        },
        "frontend": {
          "request": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          },
          "response": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          }
        },
        "backend": {
          "request": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          },
          "response": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          }
        }
      },
      "condition": "[equals(parameters('ApimServiceName'), 'APIMNGR-genesis-prod')]"
    }
  ],
  "outputs": {}
}